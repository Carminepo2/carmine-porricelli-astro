---
import { cn } from '@/lib/utils'
import type { HTMLTag, Polymorphic } from 'astro/types'
import { cva, type VariantProps } from 'class-variance-authority'

const buttonVariants = cva('inline-block font-medium leading-normal rounded-md', {
  variants: {
    variant: {
      icon: 'opacity-50 transition-opacity hover:opacity-100',
      primary:
        'dark:bg-primary-400 dark:hover:bg-primary-300 dark:text-gray-800 bg-primary-500 hover:bg-primary-400 text-white',
      secondary: 'bg-primary-100 text-primary-600 dark:bg-gray-700 hover:bg-opacity-60 dark:text-white',
      outline: 'hover:text-gray-700 border'
    },
    size: {
      small: 'px-2.5 py-1.5 text-xs',
      medium: 'px-4 py-2 text-sm',
      large: 'px-6 py-3 text-base'
    }
  },
  compoundVariants: [
    {
      variant: 'icon',
      size: 'small',
      class: 'p-0 h-6 w-6'
    },
    {
      variant: 'icon',
      size: 'medium',
      class: 'p-0 h-8 w-8'
    },
    {
      variant: 'icon',
      size: 'large',
      class: 'p-0 h-10 w-10'
    }
  ],
  defaultVariants: {
    variant: 'primary',
    size: 'medium'
  }
})

type Props<Tag extends HTMLTag = 'button'> = Polymorphic<{
  as: Tag
}> &
  VariantProps<typeof buttonVariants>

const { as = 'button', variant, size, ...props } = Astro.props
const Tag: any = as
---

<Tag {...props} class={cn(buttonVariants({ variant, size }), props.class)}><slot /></Tag>
