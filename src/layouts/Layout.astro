---
import { SectionContainer, PersonalLogoIcon, ThemeModeToggle, BackgroundBlob, LanguagePicker } from '@/components'
import { getLangFromUrl, languages } from '@/i18n'
import { getAbsoluteLocaleUrl } from 'astro:i18n'
import { AstroFont } from 'astro-font'
import { GITHUB_REPO_LINK } from '@/consts'

const activeLang = getLangFromUrl(Astro.url)
---

<!doctype html>
<html lang={activeLang}>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <link rel='apple-touch-icon' sizes='180x180' href='/apple-touch-icon.png' />
    <link rel='icon' type='image/png' sizes='32x32' href='/favicon-32x32.png' />
    <link rel='icon' type='image/png' sizes='16x16' href='/favicon-16x16.png' />
    <link rel='manifest' href='/site.webmanifest' />
    <link rel='mask-icon' href='/safari-pinned-tab.svg' color='#f59f0b' />
    <meta name='msapplication-TileColor' content='#f59f0b' />
    <meta name='theme-color' content='#f59f0b' />

    <AstroFont
      config={[
        {
          name: 'Roboto',
          src: [],
          googleFontsURL: 'https://fonts.googleapis.com/css2?family=Roboto:wght@400;500',
          preload: true,
          display: 'swap',
          selector: 'body',
          fallback: 'sans-serif'
        }
      ]}
    />

    {Object.keys(languages).map((lang) => <link rel='alternate' hreflang={lang} href={getAbsoluteLocaleUrl(lang)} />)}

    <title>Carmine Porricelli</title>
    <meta name='description' content='header.subtitle' />

    {/* Theme */}
    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme')
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
      }
      const isDark = getThemePreference() === 'dark'
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

      if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark')
          localStorage.setItem('theme', isDark ? 'dark' : 'light')
        })
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] })
      }
    </script>
  </head>
  <body>
    <div
      class='transition-colors duration-300 ease-linear relative text-gray-700 antialiased dark:bg-gray-800 dark:text-gray-200'
    >
      <div class='absolute inset-0 overflow-hidden'>
        <BackgroundBlob color='yellow' class='absolute -top-72 right-0' size={1150} />
        <BackgroundBlob color='blue' class='absolute -top-60 left-0' size={1150} />
        <BackgroundBlob color='yellow' class='absolute -bottom-[600px] right-0' size={800} />
      </div>

      <div class='relative min-h-screen flex flex-col'>
        {/* Nav */}
        <nav class='flex justify-between py-8 px-8'>
          <PersonalLogoIcon class='h-12 w-12' />
          <div class='flex items-center space-x-2'>
            <ThemeModeToggle />
            <LanguagePicker />
          </div>
        </nav>

        {/* Content */}
        <div class='flex-1'>
          <slot />
        </div>

        {/* Footer */}
        <SectionContainer
          as='footer'
          class='py-16 md:py-28 w-full flex flex-col items-center justify-between md:flex-row'
        >
          <PersonalLogoIcon class='h-12 w-auto' />
          <div class='mt-6 text-center text-xs md:mt-0 md:text-right md:text-sm'>
            <p>
              Copyright {new Date().getFullYear()} &copy; Carmine Porricelli - All Right Reserved.
            </p>
            <a
              class='mt-0.5 text-primary-700 hover:underline dark:text-primary-400 sm:mt-0'
              target='__blank'
              rel='noreferrer'
              href={GITHUB_REPO_LINK}
            >
              Made by me, checkout the source code!
            </a>
          </div>
        </SectionContainer>
      </div>
    </div>
  </body>
</html>
